@using Microsoft.AspNetCore.Mvc.Localization;
@inject IViewLocalizer localizer

@{
    ViewData["Title"] = "Listado Tareas";
}

<div class="text-center">
    <h1 class="display-4">@localizer["Mis Tareas"]</h1>
    <button type="button" class="btn btn-primary mb-3" onclick="agregarNuevaTareaAlListado()">@localizer["Agregar Nueva Tarea."]</button>
</div>

<div id="contenedor-listado-tareas" class="text-center">

    <div id="reordenable" class="text-start" data-bind="foreach: tareas">
        <div name="tarea" class="border mb-2 p-2" style="cursor:pointer" data-bind="click: manajearClickTarea">

            <div data-bind="text: titulo, hidden: esNuevo" class="fw-bold">
            </div>

            <input type="text" name="titulo-tarea" autocomplete="off" data-bind="value: titulo, visible: esNuevo, attr: {'data-id': id},
            event: {focusout: manejadorFocusoutTituloTarea}" />

        </div>
    </div>

    <div data-bind="visible: cargando" class="spinner-border">
        <span class="visually-hidden">Cargando.....</span>

    </div>

    <div data-bind="visible: noHayTareas">
        No existe tareas para Mostar!
    </div>

</div>


<partial name="_ModalEditarTarea" />

@section Scripts{

        <script src="~/js/pasos.js" asp-append-version="true"></script>
    <script>

        @*const tareasListadoViewModel = {
           tareas: ko.observableArray([]),
            cargando: ko.observable(true)
        }

        const urlTareas = "/api/tareas";*@
        const urlPasos = "/api/pasos";


        const modalEditarTarea = document.getElementById('modal-editar-tarea');
        const modalEditarTareaBootstrap = new bootstrap.Modal(modalEditarTarea);

        function tareasListadoViewModelFn() {
            var self = this;
            self.tareas = ko.observableArray([]);
            self.cargando = ko.observable(true);

            self.noHayTareas = ko.pureComputed(function () {

                if (self.cargando()) {



                    return false;
                }

                return self.tareas().length === 0;
            });

        }

        function tareasElementoListadoViewModel({ id, titulo }) {

            var self = this;
            self.id = ko.observable(id);
            self.titulo = ko.observable(titulo);
            self.esNuevo = ko.pureComputed(function () {
                return self.id() == 0;
            })

        }

        const tareaEditarVM = {
            id: 0,
            titulo: ko.observable(''),
            descripcion: ko.observable(''),
            pasos: ko.observableArray([])
        }

        const tareasListadoViewModel = new tareasListadoViewModelFn();

        function pasoViewModel({ id, descripcion, realizado, modoEdicion }) {
            var self = this;
            self.id = ko.observable(id || 0);
            self.descripcion = ko.observable(descripcion || '');
            self.realizado = ko.observable(realizado);
            self.modoEdicion = ko.observable(modoEdicion);

            self.esNuevo = ko.pureComputed(function () {
                return self.id() == 0;
            })

        }


        obtenerTareas();

        //setTimeout(() => {
        //    // Se va a ejecutar luego de 2 segundos;
        //    //tareasListadoViewModel.tareas.push({titulo: 'I Love C#.'});
        //    tareasListadoViewModel.cargando(false);
        //}, 100);

        ko.applyBindings(tareasListadoViewModel, document.getElementById('contenedor-listado-tareas'));
        ko.applyBindings(tareaEditarVM, document.getElementById('modal-editar-tarea'));

    </script>

}